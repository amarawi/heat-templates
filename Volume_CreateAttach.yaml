HeatTemplateFormatVersion: 2012-12-12
Description: > 
  CFN template snippet. Create a volume storge and attach to an 
  instance. It also attaches an existing one to /dev/vdd. You have to 
  have NeCTAR volume storage allocation and knowing where to create 
  storage. Not all nodes have stroage. All mounted volumes have to 
  be umounted and de-attched before delete stack. The demo image is 
  CentOS 6.5.
Parameters:
  KeyName: 
    Description: Name of an existing OpenStack KeyPair to enable SSH access to the instances
    Type: String
  InstanceType:
    Description: Instance type
    Type: String
    Default: m1.small
    AllowedValues: [m1.tiny, m1.small, m1.medium, m1.large, m1.xlarge]
    ConstraintDescription: must be a valid OpenStack instance type.
  VolumeSize: 
    Description: Volume size in GB.
    Type: Number
    Default: 1
    MinValue: 1
    MaxValue: 10
    ConstraintDescription: must be between 1 and 10 GB.
Resources:
  DataVolume:
    Type: AWS::EC2::Volume
    Properties:
      Size: {Ref: VolumeSize}
      AvailabilityZone:
        Fn::GetAtt: [VolumeHost, AvailabilityZone]
#not used by OpenStack::Heat
      Tags:
        - {Key: Usage, Value: {Ref: 'AWS::StackName'} }
    DeletionPolicy: Retain
  MountExisting:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: {Ref: VolumeHost}
      VolumeId: 710ccfc7-c472-4b78-9225-b1be2e965305
      Device: /dev/vdc
  MountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: {Ref: VolumeHost}
      VolumeId: {Ref: DataVolume}
      Device: /dev/vdd
  VolumeHost:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              parted: []
    Properties:
      ImageId: 96761a90-635b-4718-8deb-f4ff57632db4
      InstanceType: {Ref: InstanceType}
      KeyName: {Ref: KeyName}
      AvailabilityZone: melbourne-qh2
      SecurityGroups: [default]
      UserData: 
        Fn::Base64: 
           Fn::Replace:
            - AWS::StackName: {Ref: 'AWS::StackName'}
            - |
                #!/bin/bash -v
                /usr/bin/cfn-init -s AWS::StackName -r VolumeHost 
                
                # Wait for the volume to appear
                while [ ! -e /dev/vdc ]; do echo Waiting for volume to attach; sleep 1; done
                mkdir /mnt/demo
                mount /dev/vdc1 /mnt/demo

                # Wait for the volume vdc to appear
                while [ ! -e /dev/vdd ]; do echo Waiting for volume to attach; sleep 1; done
                parted -s /dev/vdd mklabel msdos
                # Assume use the full volume
                parted -s /dev/vdd mkpart primary ext4 0% 100%
                # Format the EBS volume and mount it
                /sbin/mkfs -t ext4 /dev/vdd1
                mkdir /mnt/demo_new
                mount /dev/vdd1 /mnt/demo_new

Outputs:
  'URL to check':
    Value:
      Fn::Join:
        - ''
        - 
          - 'ssh -i '
          - {Ref: KeyName}
          - '.pem ec2-user@'
          - Fn::GetAtt: [VolumeHost, PublicIp]
    Description: > 
      IP for ssh in to check the mounted volume.
      REMEMBER to umount volumes and manually de-attach them before delete the stack.

